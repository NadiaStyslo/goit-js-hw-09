{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAWC,SAASC,cAAc,UAClCC,EAASF,SAASC,cAAc,QAmCtC,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC1B,MAAMC,EAAgBC,KAAKC,SAAW,GACvCC,YAAW,KACLH,GACHF,EAAQ,uBAAqBH,QAAiBC,OAE3CG,EAAK,sBAAoBJ,QAAiBC,MAAU,GAEvDA,EAAM,G,CA1CbH,EAAOW,MAAMC,QAAU,OACvBZ,EAAOW,MAAME,SAAW,OACxBb,EAAOW,MAAMG,cAAgB,SAC7BjB,EAASc,MAAME,SAAW,OAC1BhB,EAASc,MAAMI,OAAS,MACxBf,EAAOW,MAAMK,QAAU,MAEvBhB,EAAOiB,iBAAiB,SAIxB,SAAgBC,GACdA,EAAIC,iBACJ,MAAMhB,MAACA,EAAKiB,KAAEA,EAAIC,OAAEA,GAAWH,EAAII,cAAcC,SACjD,IAAIC,EAAWC,OAAOtB,EAAMuB,OACxBC,EAAUF,OAAOL,EAAKM,OACtBE,EAAWH,OAAOJ,EAAOK,OAG3BxB,EAAW,EACb,IAAK,IAAI2B,EAAI,EAAGA,GAAKD,EAAUC,GAAK,EAClC5B,EAAcC,EAAUsB,GACrBM,MAAKC,GACJpC,EAAAqC,OAAOC,QAAQF,KAGhBG,OAAMC,GACLxC,EAAAqC,OAAOI,QAAQD,KACnBjC,GAAY,EACZsB,GAAsBG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst buttonEl = document.querySelector('button')\nconst formEl = document.querySelector('form')\n//console.log(buttonEl)\nformEl.style.display = 'flex';\nformEl.style.fontSize = '30px';\nformEl.style.flexDirection = 'column'\nbuttonEl.style.fontSize = '30px';\nbuttonEl.style.margin = '6px';\nformEl.style.padding = '5px'\n//buttonEl.addEventListener('sumbit', onSumbit);\nformEl.addEventListener('click', onForm)\n\n\n//function onSumbit() { }\nfunction onForm(evt) {\n  evt.preventDefault();\n  const {delay, step, amount } = evt.currentTarget.elements;\n  let delayVal = Number(delay.value);\n  let stepVal = Number(step.value);\n  let amoutVal = Number(amount.value);\n\n\nlet position = 1\n  for (let i = 1; i <= amoutVal; i += 1) {\n    createPromise(position, delayVal)\n      .then(result =>\n        Notify.success(result)\n      )\n      \n      .catch(error =>\n        Notify.failure(error))\n    position += 1;\n    delayVal = delayVal + stepVal\n  \n  }\n  }\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n     const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n       resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        }\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      \n    }, delay) \n    })\n    \n    \n  }\n \n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$buttonEl","document","querySelector","$47d4ff9957288465$var$formEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","style","display","fontSize","flexDirection","margin","padding","addEventListener","evt","preventDefault","step","amount","currentTarget","elements","delayVal","Number","value","stepVal","amoutVal","i","then","result","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.313d2fe0.js.map"}