{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAWC,SAASC,cAAc,UAClCC,EAASF,SAASC,cAAc,QAoCtC,SAASE,EAAcC,EAAUC,GAG/B,OAFAN,EAASO,aAAa,WAAY,IAE3B,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,GACFF,EAAQ,uBAAwCM,OAAfV,EAAS,QAAYU,OAANT,EAAM,OAEtDI,EAAK,sBAAuCK,OAAfV,EAAS,QAAYU,OAANT,EAAM,M,GACnDA,E,IA5CPH,EAAOa,MAAMC,QAAU,OACvBd,EAAOa,MAAME,SAAW,OACxBf,EAAOa,MAAMG,cAAgB,SAC7BnB,EAASgB,MAAME,SAAW,OAC1BlB,EAASgB,MAAMI,OAAS,MACxBjB,EAAOa,MAAMK,QAAU,MAEvBlB,EAAOmB,iBAAiB,SAOxB,SAAgBC,GACdA,EAAIC,iBAOJ,IANA,IAAgCC,EAAAF,EAAIG,cAAcC,SAA1CrB,EAAwBmB,EAAxBnB,MAAOsB,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OACjBC,EAAWC,OAAOzB,EAAM0B,OACxBC,EAAUF,OAAOH,EAAKI,OACtBE,EAAWH,OAAOF,EAAOG,OAEzB3B,EAAW,EACN8B,EAAI,EAAGA,GAAKD,EAAUC,GAAK,EAGlC/B,EAAcC,EAAUyB,GAErBM,MAAK,SAAAC,G,OAAUvC,EAAAwC,OAAOC,QAAQF,E,IAE9BG,OAAM,SAAAC,G,OAAS3C,EAAAwC,OAAOI,QAAQD,E,IACjCpC,GAAY,EACZyB,GAAsBG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst buttonEl = document.querySelector('button');\nconst formEl = document.querySelector('form');\n//console.log(buttonEl)\nformEl.style.display = 'flex';\nformEl.style.fontSize = '30px';\nformEl.style.flexDirection = 'column';\nbuttonEl.style.fontSize = '30px';\nbuttonEl.style.margin = '6px';\nformEl.style.padding = '5px';\n//formEl.addEventListener('sumbit', onSumbit);\nformEl.addEventListener('click', onForm);\n\n//function onSumbit() {\n\n//}\n\n//function onSumbit() { }\nfunction onForm(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget.elements;\n  let delayVal = Number(delay.value);\n  let stepVal = Number(step.value);\n  let amoutVal = Number(amount.value);\n\n  let position = 1;\n  for (let i = 1; i <= amoutVal; i += 1) {\n    // buttonEl.setAttribute('disabled', '')\n\n    createPromise(position, delayVal)\n      // buttonEl.setAttribute('disabled', '')\n      .then(result => Notify.success(result))\n\n      .catch(error => Notify.failure(error));\n    position += 1;\n    delayVal = delayVal + stepVal;\n  }\n}\nfunction createPromise(position, delay) {\n  buttonEl.setAttribute('disabled', '');\n\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n   \n  });\n}\n\n// createPromise(2, 1500)\n\n//   //formEl.removeAttribute('disabled')\n//   .then(({ position, delay }) => {\n\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$buttonEl","document","querySelector","$ce04d3a99e08e73b$var$formEl","$ce04d3a99e08e73b$var$createPromise","position","delay","setAttribute","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","style","display","fontSize","flexDirection","margin","padding","addEventListener","evt","preventDefault","_elements","currentTarget","elements","step","amount","delayVal","Number","value","stepVal","amoutVal","i","then","result","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.760f8e94.js.map"}